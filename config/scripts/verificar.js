// scripts/verificar.js
const { sequelize, Usuario, Disciplina, Materia, Prova, Questao, Alternativa } = require('../models');

async function verificarTudo() {
  try {
    console.log('üîç Verificando conex√£o com o banco...');
    await sequelize.authenticate();
    console.log('‚úÖ Conex√£o estabelecida com sucesso!');
    
    console.log('\nüìä Contando registros em cada tabela...');
    
    const tabelas = [
      { nome: 'Usu√°rios', model: Usuario },
      { nome: 'Disciplinas', model: Disciplina },
      { nome: 'Mat√©rias', model: Materia },
      { nome: 'Provas', model: Prova },
      { nome: 'Quest√µes', model: Questao },
      { nome: 'Alternativas', model: Alternativa }
    ];
    
    for (const tabela of tabelas) {
      const count = await tabela.model.count();
      console.log(`‚úÖ ${tabela.nome.padEnd(15)} | ${count.toString().padStart(3)} registros`);
    }
    
    console.log('\nüîó Testando relacionamentos...');
    
    // Testar disciplina com mat√©rias
    const disciplinaComMaterias = await Disciplina.findOne({
      include: [{ model: Materia, as: 'materias' }]
    });
    
    if (disciplinaComMaterias && disciplinaComMaterias.materias.length > 0) {
      console.log('‚úÖ Relacionamento Disciplina ‚Üí Mat√©ria OK');
    } else {
      console.log('‚ùå Relacionamento Disciplina ‚Üí Mat√©ria com problema');
    }
    
    // Testar quest√£o com alternativas
    const questaoComAlternativas = await Questao.findOne({
      include: [{ model: Alternativa, as: 'alternativas' }]
    });
    
    if (questaoComAlternativas && questaoComAlternativas.alternativas.length > 0) {
      console.log('‚úÖ Relacionamento Quest√£o ‚Üí Alternativa OK');
    } else {
      console.log('‚ùå Relacionamento Quest√£o ‚Üí Alternativa com problema');
    }
    
    console.log('\n‚úÖ Verifica√ß√£o conclu√≠da com sucesso!');
    console.log('\nüöÄ Pr√≥ximos comandos dispon√≠veis:');
    console.log('   npm run dev          - Iniciar servidor');
    console.log('   npm run db:check     - Verificar conex√£o');
    
    // Teste de API
    console.log('\nüåê URLs para testar:');
    console.log('   http://localhost:3000');
    console.log('   http://localhost:3000/health');
    console.log('   http://localhost:3000/api/disciplinas');
    console.log('   http://localhost:3000/api/questoes');
    
  } catch (error) {
    console.error('‚ùå Erro na verifica√ß√£o:', error.message);
  } finally {
    await sequelize.close();
  }
}

verificarTudo();